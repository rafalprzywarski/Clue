(ns macros)

(defmacro or2 [x y] `(let [or# ~x] (if or# or# ~y)))

(defmacro or
    ([] nil)
    ([x] x)
    ([x & next]
        `(let [or# ~x]
            (if or# or# (or ~@next)))))

(defn f [x] (do (lua/print ".") x))

(lua/print "5")
(or (f nil) (f nil) (f nil) (f nil) (f "x"))
(lua/print "4")
(or (f nil) (f nil) (f nil) (f "x") (f "x"))
(lua/print "3")
(or (f nil) (f nil) (f "x") (f "x") (f "x"))
(lua/print "2")
(or (f nil) (f "x") (f "x") (f "x") (f "x"))
(lua/print "1")
(or (f "x") (f "x") (f "x") (f "x") (f "x"))
